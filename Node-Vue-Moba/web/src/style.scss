// 全局样式重置

* {
    box-sizing: border-box; // 挤压内容，不会撑大网页
    outline: none;
}

html {
    font-size: 13px;
}

body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background-color: #F1F1F1;
    -webkit-font-smoothing: antialiased
}

a {
   color: #999 
}

// colors
$colors: (
  "primary": #db9e3f,
  "white": #fff,
  "light": #f9f9f9,
  "gray": #999,
  "gray-1": #666,
  "dark-1": #343440,
  "dark": #222,
  "black": #000,
);

@each $colorKey, $color in $colors {
    .text-#{$colorKey} {
        color: $color;
    }

    .bg-#{$colorKey} {
        background-color: $color;
    }
}

// text align
@each $var in (left, center, right) {
    .text-#{$var} { // #{}属性名定义
        text-align: $var;
    }
}

// font size
// 插件px to rem  通过alt+s更换基准像素，alt+z自动计算rem
$base-font-size: 1rem;
$font-sizes: (
    xs: 0.7692, //10px
    sm: 0.9231, //12px
    md: 1,  //13px
    lg: 1.0769, //14px
    xl: 1.2308, //16px
);

@each $sizeKey, $size in $font-sizes {
    .fs-#{$sizeKey} {
        font-size: $size * $base-font-size
    }
}

// flex
.d-flex {
    display: flex;
}
.flex-column{
    flex-direction: column
}

$flex-jc: (
    start: flex-start,
    end: flex-end,
    center: center,
    between: space-between,
    around: space-around,
);
@each $key, $value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
}

$flex-ai: (
    start: flex-start,
    end: flex-end,
    center: center,
    stretch: stretch,
);
@each $key, $value in $flex-ai {
    .ai-#{$key} {
        align-items: $value;
    }
}

.flex-grow-1 {
    flex-grow: 1
}

// spacing
// 0-5: 0
// .mt-1 => margin top .pb-2 => padding bottom
$spacing-types: (m: margin, p: padding);
$spacing-directions: (t: top, r: right, b: bottom, l: left);
$spacing-base-size: 1rem;
$spacing-sizes: (
    0: 0,
    1: 0.25,
    2: 0.5, 
    3: 1, 
    4: 1.5, 
    5: 3
);

@each $typeKey, $type in $spacing-types {
    @each $sizeKey, $size in $spacing-sizes {
        // .m-1 { margin: 0.25rem}
        .#{$typeKey}-#{$sizeKey} {
            #{$type}: $size * $spacing-base-size
        }
    }

    @each $sizeKey, $size in $spacing-sizes {
        // .mx-1 { margin-left: 0.25rem; margin-right: 0.25rem;}
        .#{$typeKey}x-#{$sizeKey} {
            #{$type}-left: $size * $spacing-base-size;
            #{$type}-right: $size * $spacing-base-size
        }
    }

    @each $sizeKey, $size in $spacing-sizes {
        // .my-1 { margin-top: 0.25rem; margin-bottom: 0.25rem;}
        .#{$typeKey}y-#{$sizeKey} {
            #{$type}-top: $size * $spacing-base-size;
            #{$type}-bottom: $size * $spacing-base-size
        }
    }

    @each $directionKey, $direction in $spacing-directions {
        @each $sizeKey, $size in $spacing-sizes {
            // .mt-1 { mragin-top: 0.25rem}
            .#{$typeKey}#{$directionKey}-#{$sizeKey} {
                #{$type}-#{$direction}: $size * $spacing-base-size
            }
        }
    }
}

// button
.btn {
  border: none;
  border-radius: 0.1538rem;
  // map-get 方法表示从前面定义的变量中取值
  font-size: map-get($font-sizes, 'sm') * $base-font-size;
  padding: 0.3rem 0.6rem;  
}

//nav
.nav{
    .nav-item {
        border-bottom: 3px solid transparent;
        padding-bottom: 0.2rem;
        // & 表示active与nav-item同级
        &.active {
            border-bottom: 3px solid #fff;
        }
    }
}